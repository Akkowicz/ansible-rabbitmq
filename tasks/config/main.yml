---
- name: Review rabbitmq home permission
  file:
    state: directory
    path: "{{ rabbitmq_home_path }}"
    owner: "{{ rabbitmq_owner }}"
    group: "{{ rabbitmq_group }}"
    recurse: true

- name: Change enabled_plugins file permissions
  file:
    state: touch
    path: "{{ rabbitmq_enabled_plugins_file_path }}"
    owner: "{{ rabbitmq_owner }}"
    group: "{{ rabbitmq_group }}"
    mode: "0644"
    modification_time: preserve
    access_time: preserve

- name: Check if rabbitmq_conf_vm_memory_high_watermark is under the recommended range
  fail:
    msg: "The recommended vm_memory_high_watermark range is 0.4 to 0.7."
  when: rabbitmq_conf_vm_memory_high_watermark < 0.4 or rabbitmq_conf_vm_memory_high_watermark > 0.7

- name: Copy the rabbitmq configuration file
  template:
    src: rabbitmq.conf.j2
    dest: "{{ rabbitmq_config_file_path }}"
    owner: "{{ rabbitmq_owner }}"
    group: "{{ rabbitmq_group }}"
    mode: "0644"
    backup: true
  notify: restart rabbitmq

- name: Task block to force longnames when rabbit is in cluster
  block:
    - name: Set additional_env fact with value USE_LONGNAME=true
      set_fact:
        additional_env:
          USE_LONGNAME: true

    - name: Force longnames when rabbit is in cluster
      set_fact:
        rabbitmq_conf_env: "{{ rabbitmq_conf_env | default({}) | combine(additional_env) }}"
  when: rabbitmq_clustering_enabled

- name: Generate rabbitmq environment-variables file
  template:
    src: rabbitmq-env.conf.j2
    dest: "{{ rabbitmq_env_variables_file_path }}"
    owner: "{{ rabbitmq_owner }}"
    group: "{{ rabbitmq_group }}"
    mode: "0644"
    backup: true
  when: rabbitmq_conf_env is defined
  notify: restart rabbitmq

- name: Task block alter number of system's open file if rabbitmq_system_number_open_files is set
  block:
    - name: Make sure service.d exists
      file:
        path: "{{ rabbitmq_service_d_path }}"
        state: directory

    - name: Change limit of system's number of open file
      template:
        src: limits.conf.j2
        dest: "{{ rabbitmq_service_d_path }}/limits.conf"
        backup: true
      notify:
        - daemon reload
        - restart rabbitmq
  when: rabbitmq_system_number_open_files == 500000

- name: Symlink rabbitmq bin to sbin
  file:
    src: "{{ rabbitmq_bin_path }}"
    dest: "{{ rabbitmq_sbin_path }}"
    state: link

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  meta: flush_handlers
